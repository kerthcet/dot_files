# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$PATH
DEFAULT_USER="tracy"

export TERM="xterm-256color"

# POWERLEVEL9K
ZSH_THEME="powerlevel9k/powerlevel9k"
plugins=(git zsh-autosuggestions zsh-completions autojump zsh-syntax-highlighting zsh-wakatime golang tmux docker-compose kubectl kube-ps1)

POWERLEVEL9K_MODE='nerdfont-complete'
POWERLEVEL9K_SHORTEN_STRATEGY="truncate_middle"
POWERLEVEL9K_SHORTEN_DIR_LENGTH=2
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir dir_writable context vcs kube_ps1)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status battery time background_jobs command_execution_time virtualenv go_version pyenv rvm)
POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND='245'
POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND='black'
POWERLEVEL9K_OS_ICON_BACKGROUND="white"
POWERLEVEL9K_OS_ICON_FOREGROUND="blue"
POWERLEVEL9K_DIR_HOME_FOREGROUND="white"
POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND="white"
POWERLEVEL9K_DIR_DEFAULT_FOREGROUND="white"
POWERLEVEL9K_TIME_BACKGROUND="black"
POWERLEVEL9K_TIME_FOREGROUND="249"
POWERLEVEL9K_TIME_FORMAT="%D{%H:%M}"
POWERLEVEL9K_STATUS_VERBOSE="true"
POWERLEVEL9K_TIME_BACKGROUND='255'
POWERLEVEL9K_TIME_FOREGROUND='black'
POWERLEVEL9K_PROMPT_ON_NEWLINE=false
POWERLEVEL9K_PROMPT_ADD_NEWLINE=false

# Vi-Mode
POWERLEVEL9K_VI_MODE_INSERT_BACKGROUND='005'
POWERLEVEL9K_VI_MODE_INSERT_FOREGROUND='236'
POWERLEVEL9K_VI_MODE_NORMAL_BACKGROUND='245'
POWERLEVEL9K_VI_MODE_NORMAL_FOREGROUND='236'

POWERLEVEL9K_SHOW_CHANGESET=true
POWERLEVEL9K_CHANGESET_HASH_LENGTH=6
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=''

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
source $ZSH/oh-my-zsh.sh

source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /Users/tracy/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
source $ZSH/plugins/kubectl/kubectl.plugin.zsh
source /usr/local/opt/kube-ps1/share/kube-ps1.sh
prompt_kube_ps1(){
   echo -n `kube_ps1`
}
PROMPT='$(kube_ps1)'$PROMPT
KUBE_PS1_SYMBOL_DEFAULT="⎈"
KUBE_PS1_DIVIDER=":"
KUBE_PS1_PREFIX="("
KUBE_PS1_SUFFIX=")"
KUBE_PS1_SYMBOL_ENABLE=true
KUBE_PS1_SEPARATOR=" "
KUBE_PS1_SYMBOL_COLOR=black
KUBE_PS1_CTX_COLOR=red
KUBE_PS1_NS_COLOR=white

# start typing + [Up-Arrow] - fuzzy find history forward
if [[ "${terminfo[kcuu1]}" != "" ]]; then
  autoload -U up-line-or-beginning-search
  zle -N up-line-or-beginning-search
  bindkey "${terminfo[kcuu1]}" up-line-or-beginning-search
fi
# start typing + [Down-Arrow] - fuzzy find history backward
if [[ "${terminfo[kcud1]}" != "" ]]; then
  autoload -U down-line-or-beginning-search
  zle -N down-line-or-beginning-search
  bindkey "${terminfo[kcud1]}" down-line-or-beginning-search
fi

# eval $(thefuck --alias)

# nvm 会增加zsh启动时间，非常卡
function loadnvm(){
	export NVM_DIR="$HOME/.nvm"
	. "/usr/local/opt/nvm/nvm.sh"
}

# Load RVM into a shell session *as a function*
function loadrvm(){
}

# 隐藏该功能，影响cd进入时间
# auto run pipenv shell when enterin a project
# function auto_pipenv_shell {
#     if [ ! -n "${PIPENV_ACTIVE+1}" ]; then
#         if [ -f "Pipfile" ] ; then
#             pipenv shell
#         fi
#     fi
# }

# function cd {
#     builtin cd "$@"
#     auto_pipenv_shell
# }

# 创建vim undo文件夹
# if [ ! -d ~/.vim/undodir  ];then
#   mkdir ~/.vim/undodir
# fi

bindkey '^A' beginning-of-line
bindkey '^E' end-of-line
bindkey '^W' backward-kill-word
bindkey '^K' kill-line
bindkey '^F' forward-char
bindkey '^B' backward-char
bindkey '^D' delete-char
bindkey '^J' list-expand
bindkey "^]" history-beginning-search-backward
bindkey "^[" history-beginning-search-forward

source ~/.bash_profile

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export PATH="/usr/local/opt/go@1.14/bin:$PATH"
